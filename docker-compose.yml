services:
  server2:
    image: ghcr.io/lavafrai/maiapp/maiserver:latest
    container_name: mai-server2
    restart: unless-stopped
    expose:
      - "80"
    healthcheck:
      test: curl -sS http://127.0.0.1/groups || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  landing:
    image: ghcr.io/lavafrai/maiapp/maiapp-landing:latest
    container_name: mai-landing
    restart: unless-stopped
    expose:
      - "80"
    healthcheck:
      test: curl -sS http://127.0.0.1 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-internal:
    image: nginx:alpine
    container_name: mai-nginx-internal
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - ./server-configs/nginx-internal/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server2
      - landing
    healthcheck:
      test: curl -sS https://maiapp.lavafrai.ru/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  anubis:
    image: ghcr.io/techarohq/anubis:latest
    container_name: mai-anubis
    restart: unless-stopped
    environment:
      BIND: ":80"
      DIFFICULTY: "4"
      METRICS_BIND: ":9090"
      SERVE_ROBOTS_TXT: "false"
      TARGET: "http://nginx-internal"
      POLICY_FNAME: "/data/cfg/botPolicy.yaml"
      OG_PASSTHROUGH: "true"
      OG_EXPIRY_TIME: "24h"
    healthcheck:
      test: [ "CMD", "anubis", "--healthcheck" ]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 500ms
    expose:
      - "80"
      - "9090"
    volumes:
      - ./server-configs/anubis/botPolicy.yaml:/data/cfg/botPolicy.yaml:ro
    depends_on:
      - nginx-internal

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: mai-prometheus
    volumes:
      - ./server-configs/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090

  caddy-external:
    build:
      context: server-configs/caddy-external
      dockerfile: Dockerfile
    container_name: mai-caddy-external
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    expose:
      - "8081"
    volumes:
      - ./server-configs/caddy-external/Caddyfile:/etc/caddy/Caddyfile
      - caddy-usage-data:/usage-data
    depends_on:
      - anubis

  grafana:
    image: grafana/grafana:latest
    container_name: mai-grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./server-configs/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"


volumes:
  caddy-usage-data:
  prometheus-data:
  grafana-data:
