name: Build KMP iOS App (maiapp)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    env:
      SCHEME_NAME: iosApp
      WORKSPACE_PATH: iosApp/iosApp.xcodeproj/project.xcworkspace
      EXPORT_METHOD: app-store
      OUTPUT_DIR_IOS: iosApp/actions
      ARCHIVE_NAME: maiapp.xcarchive

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup common build environment
        uses: ./.github/actions/common-build-setup
        with:
          java-version: '17'
          secrets-properties: ${{ secrets.SECRETS_PROPERTIES }}

      - name: Set up Ruby for CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Cache CocoaPods dependencies
        uses: actions/cache@v4
        with:
          path: iosApp/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('iosApp/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        run: |
          cd iosApp
          pod install --repo-update

      # --- НОВЫЙ ШАГ: Диагностика настроек сборки ---
      - name: Show Resolved Build Settings for Release
        run: |
          echo "--- Dumping Resolved Build Settings for Release ---"
          cd iosApp # Переходим в iosApp, чтобы пути к workspace/project были правильными
          xcodebuild -workspace iosApp.xcodeproj/project.xcworkspace \
                     -scheme iosApp \
                     -sdk iphoneos \
                     -configuration Release \
                     -showBuildSettings \
                     | grep "CODE_SIGN\|PROVISIONING_PROFILE"
          echo "--- End of Build Settings Dump ---"
        # Мы ищем строки, содержащие CODE_SIGN или PROVISIONING_PROFILE

      # --- Настройка подписи кода ---
      - name: Import Apple Certificate
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_P12_KEYSTORE_B64 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Import Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ env.APPLE_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/"${{ env.SCHEME_NAME }}_profile.mobileprovision"
        env:
          APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APPLE_MOBILEPROVISION_B64 }}

      # --- НОВЫЙ ШАГ: Проверка установленных профилей ---
      - name: List Installed Provisioning Profiles
        run: |
          echo "--- Listing Installed Provisioning Profiles ---"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles
          echo "--- End of Profile Listing ---"

      # --- Создание ExportOptions.plist ---
      - name: Create ExportOptions.plist
        # ... (код без изменений) ...
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      # --- Сборка Архива (.xcarchive) ---
      - name: Build Xcode Archive
        run: |
          mkdir -p "${{ env.OUTPUT_DIR_IOS }}"
          # Запускаем из корня, как и раньше
          xcodebuild archive \
            -workspace "${{ env.WORKSPACE_PATH }}" \
            -scheme "${{ env.SCHEME_NAME }}" \
            -sdk iphoneos \
            -configuration Release \
            -archivePath "${{ env.OUTPUT_DIR_IOS }}/${{ env.ARCHIVE_NAME }}"

      # --- Экспорт IPA (.ipa) ---
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath "${{ env.OUTPUT_DIR_IOS }}/${{ env.ARCHIVE_NAME }}" \
            -exportPath "${{ env.OUTPUT_DIR_IOS }}/" \
            -exportOptionsPlist ExportOptions.plist

      # --- Загрузка артефакта ---
      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-${{ github.run_number }} # Название артефакта
          path: ${{ env.OUTPUT_DIR_IOS }}/${{ env.SCHEME_NAME }}.ipa
          retention-days: 7 # Хранить артефакт 7 дней